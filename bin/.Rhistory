143546908-143546775
143547503-143547384
2800/3000
?Clusterize
?Clusterize
library(DECIPHER)
library(data.table)
?Clusterize
2800/3000
500*.95
3000*.7
knitr::opts_chunk$set(echo = TRUE)
library(tictoc)
library(data.table)
library(tidyverse)
library(GenomicRanges)
library(ivs)
library(cowplot)
library(RColorBrewer)
library(combinat)
library(gprofiler2)
package_table <- do.call('rbind', lapply(sessionInfo(package=c("tictoc", "data.table", "tidyverse", "GenomicRanges", "ivs", "cowplot", "RColorBrewer", "gprofiler2", "combinat"))$otherPkgs, function(package) {
data.frame(Package = package$Package, Version = package$Version)
} ) )
rownames(package_table) <- NULL
knitr::kable(package_table)
package_table <- do.call('rbind', lapply(sessionInfo(package=c("tictoc", "data.table", "tidyverse", "GenomicRanges", "ivs", "cowplot", "RColorBrewer", "gprofiler2", "combinat"))$otherPkgs, function(package) {
data.frame(Package = package$Package, Version = package$Version)
} ) )
rownames(package_table) <- NULL
knitr::kable(package_table)
preprocess.file <- function(file) {
print(file)
data <- fread(file, header = T, sep = "\t")
if("TSD" %in% names(data)) {
data <- data[,-c("TSD", "PolyA_tail")]
}
data$species <- strsplit(basename(file), "_")[[1]][1]
data$phenotype <- strsplit(basename(file), "_")[[1]][2]
data$tissue <- strsplit(basename(file), "_")[[1]][3]
data$cell_type <- strsplit(basename(file), "_")[[1]][4]
data$individual <- gsub(".ins", "", strsplit(basename(file), "_")[[1]][6])
data$Ins_chr <- unlist(lapply(data$Chromosome, function(ins){
chr <- strsplit(ins, ";")[[1]][1]
chr
}))
data$Ins_start <-  unlist(lapply(data$Start, function(ins){
start <- min(as.numeric(strsplit(ins, ";")[[1]]))
start
}))
data$Ins_end <-  unlist(lapply(data$End, function(ins){
end <- max(as.numeric(strsplit(ins, ";")[[1]]))
end
}))
data$LF_chr_majority <- unlist(lapply(data$LF_chr, function(lf) {
chroms <- table(strsplit(lf, ";")[[1]])
max_chrom <- chroms[as.numeric(which(chroms == max(chroms)))]
chrom_names <- names(max_chrom)
new_chr_names <- unlist(lapply(chrom_names, function(rename) {
if(!grepl("chr", rename)) {
rename <- gsub(".*\\|", "", rename)
}
rename
} ) )
paste(new_chr_names, collapse = ";")
}))
data$RF_chr_majority <- unlist(lapply(data$RF_chr, function(rf) {
chroms <- table(strsplit(rf, ";")[[1]])
max_chrom <- chroms[as.numeric(which(chroms == max(chroms)))]
chrom_names <- names(max_chrom)
paste(chrom_names, collapse = ";")
}))
dataSlim <- data[Ins_chr != LF_chr_majority]
dataSlim <- dataSlim[Ins_chr != RF_chr_majority]
dataSlim
}
setwd("/Users/rlinder/Library/CloudStorage/OneDrive-SanfordBurnhamPrebysMedicalDiscoveryInstitute/Chun_lab/Projects/EVs/")
ev_cnt_mat <- paste0(getwd(), '/2020dec_EV_commonJxn_allinfo_countMat 1.txt')
ev_meta <- paste0(getwd(), '/2020dec_EV_expInfo.txt')
total_reads <- paste0(getwd(), '/2020dec_EV_isoReadsPropTable.txt')
ad_genes <- paste0(getwd(), '/Neurodegenerative_genes.txt')
# read in the above files
ev_cnt_mat_dt <- fread(ev_cnt_mat, header = T, sep = "\t")
ev_meta_dt <- fread(ev_meta, header = T, sep = "\t")
ev_total_reads <- fread(total_reads, header = T, sep = "\t")
ad_genes_dt <- fread(ad_genes, header =T)
total_reads_dt <- ev_total_reads[, .(total_reads = unique(Total)), by = exp]
neuro_genes_detected <- merge(ad_genes_dt, ev_cnt_mat_dt, by = "gene")
neuro_genes_detected_melt <- melt(neuro_genes_detected, id.vars = c("gene", "isoform_id", "category", "subcategory", "IEJ"), measure.vars = c(as.character(1:48)), variable.name = "exp_id", value.name = "Read_count", variable.factor = FALSE)
ev_meta_total_reads <- merge(ev_meta_dt, total_reads_dt, by.x = "exp_id", by.y = "exp")
neuro_genes_detected_melt[, exp_id := as.numeric(exp_id)]
all_data <- merge(neuro_genes_detected_melt, ev_meta_total_reads, by = "exp_id")
exosome_data <- all_data[grepl("E$", exp_name) & Read_count > 0]
exosome_data <- exosome_data[, CPM := (Read_count*1000000)/total_reads][CPM >= 10]
samples_per_isoform <- exosome_data[, .(nsamples = uniqueN(sample_id)), by = isoform_id][nsamples > 2]
meeting_cutoff <- exosome_data[isoform_id %in% samples_per_isoform$isoform_id]
ad_genes_cutoff <- meeting_cutoff[disease == "AD"]
ad_genes_cutoff
meeting_cutoff
meeting_cutoff
format_table <- meeting_cutoff[, .(category = toString(categroy), by = gene)]
format_table <- meeting_cutoff[, .(category = toString(category), by = gene)]
format_table
format_table
meeting_cutoff
format_table <- meeting_cutoff[, .(Gene_read_count = sum(Read_count), Samples = uniqueN(sample_name), Isoforms = uniqueN(isoform_id), CPM = sum(CPM)), by = gene]
format_table
format_table <- meeting_cutoff[, .(Gene_read_count = sum(Read_count), Samples = uniqueN(sample_name), Isoforms = uniqueN(isoform_id), CPM = as.integer(sum(CPM))), by = gene]
format_table
meta_table <- meeting_cutoff[, lapply(.SD, function(x) {paste(sort(unique(x)), collapse = ', ')}), .SDcols = c("category", "tissue", "disease"), by = gene]
meta_table
ad_genes_cutoff
ad_genes_cutoff[gene == "APP"]
complete_table <- merge(format_table, meta_table, by = "gene")
complete_table
write.table(complete_table, "Gene_isoseq_table.txt", col.names = TRUE, sep = "\t", row.names = FALSE)
write.table(meeting_cutoff, "AD_related_isoseq_table.txt", col.names = TRUE, sep = "\t", row.names = FALSE)
View(ev_total_reads)
new_cpm <- meeting_cutoff[, .(CPM = (sum(Read_count)*1000000)/sum(unique(total_reads))), by = gene]
new_cpm
format_table <- meeting_cutoff[, .(Gene_read_count = sum(Read_count), Samples = uniqueN(sample_name), Isoforms = uniqueN(isoform_id), CPM = as.integer((sum(Read_count)*1000000)/sum(unique(total_reads)))), by = gene]
format_table
complete_table <- merge(format_table, meta_table, by = "gene")
write.table(complete_table, "Gene_isoseq_table.txt", col.names = TRUE, sep = "\t", row.names = FALSE)
